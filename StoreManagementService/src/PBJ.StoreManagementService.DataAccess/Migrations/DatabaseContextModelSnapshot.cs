// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PBJ.StoreManagementService.DataAccess.Context;

#nullable disable

namespace PBJ.StoreManagementService.DataAccess.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "CommentContent1",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(3969),
                            PostId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "CommentContent2",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(3981),
                            PostId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Following", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("FollowingUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FollowingUserId")
                        .IsUnique();

                    b.ToTable("Followings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(6362),
                            FollowingUserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(6366),
                            FollowingUserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "PostContent1",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(9785),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "PostContent2",
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 787, DateTimeKind.Local).AddTicks(9790),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("date");

                    b.Property<int>("SubscribedUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscribedUserId")
                        .IsUnique();

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 788, DateTimeKind.Local).AddTicks(1864),
                            SubscribedUserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 19, 12, 25, 1, 788, DateTimeKind.Local).AddTicks(1868),
                            SubscribedUserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nchar");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2023, 7, 19, 12, 25, 1, 788, DateTimeKind.Local).AddTicks(6578),
                            Email = "login1",
                            LastName = "Lastname1",
                            Name = "Name1",
                            Surname = "Surname1"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2023, 7, 19, 12, 25, 1, 788, DateTimeKind.Local).AddTicks(6587),
                            Email = "login2",
                            LastName = "Lastname2",
                            Name = "Name2",
                            Surname = "Surname2"
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.UserFollowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FollowingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FollowingId");

                    b.ToTable("UserFollowings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FollowingId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            FollowingId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.UserSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SubscriptionId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            SubscriptionId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Comment", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Following", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "FollowingUser")
                        .WithOne("Following")
                        .HasForeignKey("PBJ.StoreManagementService.DataAccess.Entities.Following", "FollowingUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FollowingUser");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Post", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Subscription", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "SubscribedUser")
                        .WithOne("Subscription")
                        .HasForeignKey("PBJ.StoreManagementService.DataAccess.Entities.Subscription", "SubscribedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubscribedUser");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.UserFollowing", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.Following", "Following")
                        .WithMany("UserFollowings")
                        .HasForeignKey("FollowingId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "User")
                        .WithMany("UserFollowings")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Following");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.UserSubscription", b =>
                {
                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.Subscription", "Subscription")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PBJ.StoreManagementService.DataAccess.Entities.User", "User")
                        .WithMany("UserSubscriptions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Subscription");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Following", b =>
                {
                    b.Navigation("UserFollowings");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.Subscription", b =>
                {
                    b.Navigation("UserSubscriptions");
                });

            modelBuilder.Entity("PBJ.StoreManagementService.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Following")
                        .IsRequired();

                    b.Navigation("Posts");

                    b.Navigation("Subscription")
                        .IsRequired();

                    b.Navigation("UserFollowings");

                    b.Navigation("UserSubscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
